[General]
network = pfssim_1
cpu-time-limit = 60000s


**.numClients = 64
**.numDservers = 8
pfssim_1.c[*].trcs_per_client = 1

pfssim_1.c[*].trc_path_prefix = "input/synthetic/trace"
pfssim_1.c[*].rslt_path_prefix = "output/result"
pfssim_1.ms.layout_input_path = "config/pfslayout/sample/ed-8-128-64k"
pfssim_1.ds[*].lfs.ext_in_path_prefix = "config/lfslayout/in/example/ext"
pfssim_1.ds[*].lfs.ext_out_path_prefix = "config/lfslayout/out/ext"
pfssim_1.ds[*].disk.disk_parm_path = "config/disk/diskparms"

pfssim_1.c[*].trc_proc_time = 0
pfssim_1.c[*].pkt_proc_time = 0
pfssim_1.c[*].pkt_size_limit = 16384
pfssim_1.c[*].small_io_size_threshold = 16384
pfssim_1.ds[*].dsd.small_io_size_threshold = 16384


pfssim_1.ms.ms_proc_time = 0

pfssim_1.proxy[*].algorithm = 0
pfssim_1.proxy[*].degree = 512
pfssim_1.proxy[*].newjob_proc_time = 0
pfssim_1.proxy[*].finjob_proc_time = 0
pfssim_1.proxy[*].numApps = 2

pfssim_1.ds[*].dsd.parallel_job_proc_time = 0
pfssim_1.ds[*].dsd.write_metadata_proc_time = 0
pfssim_1.ds[*].dsd.write_data_proc_time = 0
pfssim_1.ds[*].dsd.read_metadata_proc_time = 0
pfssim_1.ds[*].dsd.degree = 8
pfssim_1.ds[*].dsd.pfsname = "pvfs2"
pfssim_1.ds[*].dsd.object_size = 16384
pfssim_1.ds[*].dsd.max_subreq_size = 16384

pfssim_1.ds[*].*.page_size = 4096
pfssim_1.ds[*].vfs.degree = 1024

pfssim_1.ds[*].lfs.blk_size = 4096
pfssim_1.ds[*].lfs.degree = 1
pfssim_1.ds[*].lfs.fsname = "ext3"
pfssim_1.ds[*].lfs.new_ext_size = 1024
pfssim_1.ds[*].lfs.new_ext_gap = 64

pfssim_1.ds[*].diskcache.total_pages = 6184192
pfssim_1.ds[*].diskcache.usable_pages = 6132248
pfssim_1.ds[*].diskcache.cache_r_speed = 0.0000015
pfssim_1.ds[*].diskcache.cache_w_speed = 0.0000080
pfssim_1.ds[*].diskcache.dirty_ratio = 0.20
pfssim_1.ds[*].diskcache.dirty_background_ratio = 0.10
pfssim_1.ds[*].diskcache.dirty_expire_centisecs = -1
pfssim_1.ds[*].diskcache.writeout_batch = 256
pfssim_1.ds[*].diskcache.diskread_batch = 512
pfssim_1.ds[*].diskcache.disable_ra = 0 # Boolean, 1 if you want to disable read ahead, 0 otherwise.


pfssim_1.ds[*].*.disk_size = 244190464
pfssim_1.ds[*].disk.degree = 1
pfssim_1.ds[*].disk.ra_size = -1
pfssim_1.ds[*].disk.return_zero = 0 # If set, the disk head will return 0 after a certain time.
pfssim_1.ds[*].disk.return_zero_period = 0.000001 # Works with return_zero. The max time span the disk head will stay at the same place when idle.
