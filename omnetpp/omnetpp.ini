[General]
network = pfssim_1
cpu-time-limit = 36000s
sim-time-limit = 3600s


**.numClients = 8
**.numDservers = 8
pfssim_1.c[*].application.trace_count = 2

# PFS specification.
pfssim_1.c[*].pfsclient.pfs_client_signature = "PVFS2"
pfssim_1.ms.pfs_metadataserver_signature = "PVFS2"

# Time.
pfssim_1.c[*].application.trace_proc_time = 0
pfssim_1.c[*].pfsclient.data_packet_process_time = 0
pfssim_1.c[*].pfsclient.metadata_packet_process_time = 0
pfssim_1.ms.data_proc_time = 0
pfssim_1.ms.metadata_proc_time = 0


pfssim_1.c[*].pfsclient.packet_size_limit = 16384
pfssim_1.c[*].pfsclient.small_io_size_threshold = 16384
pfssim_1.c[*].pfsclient.max_transfer_window_size = 10485760 # 10MB window size

pfssim_1.ds[*].lfs.ext_in_path_prefix = "config/lfslayout/in/synthetic/ext"
pfssim_1.ds[*].lfs.ext_out_path_prefix = "config/lfslayout/out/ext"
pfssim_1.ds[*].disk.disk_parm_path = "config/disk/ST500NM0001"

# 0:FIFO; 1:SFQ; 2:DSFQ-A; 3:DSFQ-D; 4:DSFQ-F; 5:Split-SFQ; 6:DSFQ-A-Timebased; 7:DSFQ-A-Loadbased;
pfssim_1.proxy[*].algorithm = 1
pfssim_1.proxy[*].alg_param = "[0 1000] [1 1000]" # The weight assignment for weight-based algorithms.
pfssim_1.proxy[*].alg_prop_int = 0.1 # Propagation time interval
pfssim_1.proxy[*].alg_prop_wl = 4194304 # Propagation workload threshold: data length
#pfssim_1.proxy[*].alg_prop_wl = 1048576 # Propagation workload threshold: data length
#pfssim_1.proxy[*].alg_prop_wl = 131072 # Propagation workload threshold: data length
pfssim_1.proxy[*].numApps = 2
pfssim_1.proxy[*].degree = 4
pfssim_1.proxy[*].newjob_proc_time = 0
pfssim_1.proxy[*].finjob_proc_time = 0

pfssim_1.ds[*].dsd.small_io_size_threshold = 16384
pfssim_1.ds[*].dsd.parallel_job_proc_time = 0
pfssim_1.ds[*].dsd.write_metadata_proc_time = 0
pfssim_1.ds[*].dsd.write_data_proc_time = 0
pfssim_1.ds[*].dsd.read_metadata_proc_time = 0
pfssim_1.ds[*].dsd.degree = 8
pfssim_1.ds[*].dsd.pfsname = "pvfs2"
pfssim_1.ds[*].dsd.object_size = 16384
pfssim_1.ds[*].dsd.max_subreq_size = 16384
pfssim_1.ds[*].dsd.O_DIRECT = 0

pfssim_1.ds[*].*.page_size = 4096
pfssim_1.ds[*].vfs.degree = 1024

pfssim_1.ds[*].lfs.blk_size = 4096
pfssim_1.ds[*].lfs.degree = 1
pfssim_1.ds[*].lfs.fsname = "ext3"
pfssim_1.ds[*].lfs.new_ext_size = 1024
pfssim_1.ds[*].lfs.new_ext_gap = 64

pfssim_1.ds[*].diskcache.total_pages = 6184192
pfssim_1.ds[*].diskcache.usable_pages = 6132248
pfssim_1.ds[*].diskcache.cache_r_speed = 0.0000015
pfssim_1.ds[*].diskcache.cache_w_speed = 0.0000080
pfssim_1.ds[*].diskcache.dirty_ratio = 0.20
pfssim_1.ds[*].diskcache.dirty_background_ratio = 0.10
pfssim_1.ds[*].diskcache.dirty_expire_centisecs = -1
pfssim_1.ds[*].diskcache.writeout_batch = 256
pfssim_1.ds[*].diskcache.diskread_batch = 512
pfssim_1.ds[*].diskcache.disable_ra = 0 # Boolean, 1 if you want to disable read ahead, 0 otherwise.


pfssim_1.ds[*].*.disk_size = 244190464
pfssim_1.ds[*].disk.degree = 1
pfssim_1.ds[*].disk.ra_size = -1
pfssim_1.ds[*].disk.return_zero = 0 # If set, the disk head will return 0 after a certain time.
pfssim_1.ds[*].disk.return_zero_period = 0.000001 # Works with return_zero. The max time span the disk head will stay at the same place when idle.


# Input output.

pfssim_1.c[*].application.trace_file_client_index_digits = 3
pfssim_1.c[*].application.trace_file_trace_index_digits = 2

pfssim_1.c[*].application.trace_input_method = "file"
pfssim_1.c[*].application.trace_input_file_prefix_before_client_ID = "input/synthetic/client"
pfssim_1.c[*].application.trace_input_file_prefix_after_client_ID = "trace"
pfssim_1.c[*].application.trace_input_file_postfix = ""

pfssim_1.c[*].application.trace_output_method = "file"
pfssim_1.c[*].application.trace_output_file_prefix_before_client_ID = "output/trace/client"
pfssim_1.c[*].application.trace_output_file_prefix_after_client_ID = "trace"
pfssim_1.c[*].application.trace_output_file_postfix = ""

pfssim_1.c[*].pfsclient.output_file_client_index_digits = 3

pfssim_1.c[*].pfsclient.data_packet_output_method = "file"
pfssim_1.c[*].pfsclient.data_packet_output_file_count = 1
pfssim_1.c[*].pfsclient.data_packet_output_file_prefix_before_client_ID = "output/datapacket/client"
pfssim_1.c[*].pfsclient.data_packet_output_file_prefix_after_client_ID = "server"
pfssim_1.c[*].pfsclient.data_packet_output_file_postfix = ""
pfssim_1.c[*].pfsclient.data_packet_output_file_index_digits = 2

pfssim_1.c[*].pfsclient.metadata_packet_output_method = "file"
pfssim_1.c[*].pfsclient.metadata_packet_output_file_count = 1
pfssim_1.c[*].pfsclient.metadata_packet_output_file_prefix_before_client_ID = "output/metadatapacket/client"
pfssim_1.c[*].pfsclient.metadata_packet_output_file_prefix_after_client_ID = "server"
pfssim_1.c[*].pfsclient.metadata_packet_output_file_postfix = ""
pfssim_1.c[*].pfsclient.metadata_packet_output_file_index_digits = 2

pfssim_1.ms.pfs_input_file_num = 1
pfssim_1.ms.pfs_input_file_ID_digits = 0
pfssim_1.ms.pfs_input_file_prefix = "config/pfslayout/synthetic/even-dist/even-dist"
pfssim_1.ms.pfs_input_file_postfix = ""
