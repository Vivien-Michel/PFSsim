//
// Generated file, do not edit! Created by opp_msgc 4.0 from packet/GPacket.msg.
//

#ifndef _GPACKET_M_H_
#define _GPACKET_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0400
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Class generated from <tt>packet/GPacket.msg</tt> by opp_msgc.
 * <pre>
 * message gPacket extends cPacket
 * {
 *     long id = 0; 
 *     
 *     double risetime = 0; 
 *     double submittime = 0; 
 *     double arrivaltime = 0; 
 *     double dispatchtime = 0; 
 *     double finishtime = 0; 
 *     double returntime = 0; 
 *     
 *     double qos_delay = 0; 
 *     
 *     long highoffset = 0; 
 *     long lowoffset = 0; 
 *     int size = 0; 
 *     int read = 0; 
 *     int decision = -1; 
 *     int app = 0; 
 * }
 * </pre>
 */
class gPacket : public cPacket
{
  protected:
    long id_var;
    double risetime_var;
    double submittime_var;
    double arrivaltime_var;
    double dispatchtime_var;
    double finishtime_var;
    double returntime_var;
    double qos_delay_var;
    long highoffset_var;
    long lowoffset_var;
    int size_var;
    int read_var;
    int decision_var;
    int app_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const gPacket&);

  public:
    gPacket(const char *name=NULL, int kind=0);
    gPacket(const gPacket& other);
    virtual ~gPacket();
    gPacket& operator=(const gPacket& other);
    virtual gPacket *dup() const {return new gPacket(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual long getId() const;
    virtual void setId(long id_var);
    virtual double getRisetime() const;
    virtual void setRisetime(double risetime_var);
    virtual double getSubmittime() const;
    virtual void setSubmittime(double submittime_var);
    virtual double getArrivaltime() const;
    virtual void setArrivaltime(double arrivaltime_var);
    virtual double getDispatchtime() const;
    virtual void setDispatchtime(double dispatchtime_var);
    virtual double getFinishtime() const;
    virtual void setFinishtime(double finishtime_var);
    virtual double getReturntime() const;
    virtual void setReturntime(double returntime_var);
    virtual double getQos_delay() const;
    virtual void setQos_delay(double qos_delay_var);
    virtual long getHighoffset() const;
    virtual void setHighoffset(long highoffset_var);
    virtual long getLowoffset() const;
    virtual void setLowoffset(long lowoffset_var);
    virtual int getSize() const;
    virtual void setSize(int size_var);
    virtual int getRead() const;
    virtual void setRead(int read_var);
    virtual int getDecision() const;
    virtual void setDecision(int decision_var);
    virtual int getApp() const;
    virtual void setApp(int app_var);
};

inline void doPacking(cCommBuffer *b, gPacket& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, gPacket& obj) {obj.parsimUnpack(b);}


#endif // _GPACKET_M_H_
